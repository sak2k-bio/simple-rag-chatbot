version: '3.8'

services:
  bulk-processor:
    build: .
    ports:
      - "3001:3001"
    volumes:
      - ./data:/app/data
      - ./uploads:/app/uploads
      - ./manifests:/app/manifests
      - ./.env.local:/app/.env.local:ro
    environment:
      - NODE_ENV=production
      - BULK_CONCURRENCY=12
      - BULK_EMBED_BATCH=50
      - BULK_UPSERT_BATCH=200
      - OPTIMAL_CHUNK_SIZE=1000
      - OPTIMAL_CHUNK_OVERLAP=200
      - OLLAMA_GPU_LAYERS=20
      - OLLAMA_NUM_CTX=2048
      - OLLAMA_NUM_BATCH=512
      # Point containers to the host's Ollama instance
      - OLLAMA_URL=http://host.docker.internal:11434
      - OLLAMA_MODEL=nomic-embed-text
      - QDRANT_URL=http://qdrant:6333
      # Leave QDRANT_API_KEY empty for local development
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped

  # Optional: Ollama service for local embeddings
  # Uncomment the following service to use Ollama instead of Google AI
  # ollama:
  #   image: ollama/ollama:latest
  #   ports:
  #     - "11434:11434"
  #   volumes:
  #     - ollama_storage:/root/.ollama
  #   environment:
  #     - OLLAMA_HOST=0.0.0.0
  #   restart: unless-stopped
  #   # Note: You'll need to pull the embedding model manually:
  #   # docker exec -it bulk_embeddings-ollama-1 ollama pull nomic-embed-text

volumes:
  qdrant_storage:
  # ollama_storage:
